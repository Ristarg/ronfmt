// implicit
WHITESPACE = _{ " " | "\n" | "\t" | "\r" }
COMMENT = ${ "//" ~ comment_inner ~ (NEWLINE | &EOI) }
comment_inner = @{ (!NEWLINE ~ ANY)* }

// booleans
bool = { "true" | "false" }

// numbers
sign = { "+" | "-" }

// // ints
signed_int = @{ sign? ~ unsigned_int }
unsigned_int = { base_prefix? ~ ASCII_DIGIT+ }
base_prefix = { "0" ~ ("x" | "b" | "o") }

// // floats
float = @{ float_std | float_frac }
float_std = { sign? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* ~ float_exp? }
float_frac = { "." ~ ASCII_DIGIT+ ~ float_exp? }
float_exp = { ("e" | "E") ~ ASCII_DIGIT+ }

// chars
char = ${ "'" ~ char_inner ~ "'" }
char_inner = { "\\'" | "\\\\" | (!"'" ~ ANY) }

// strings
string = ${ string_std | string_raw }
string_std = { "\"" ~ string_std_inner ~ "\"" }
string_std_inner = { ("\\\"" | (!"\"" ~ ANY))* }
string_raw = { "r" ~ PUSH("#"*) ~ "\"" ~ string_raw_inner ~ "\"" ~ POP }
string_raw_inner = { (!("\"" ~ PEEK) ~ ANY)* }

// collections
comma_separated_values = { value ~ ("," ~ value)* ~ ","? }
list = { "[" ~ comma_separated_values? ~ "]" }
tuple = { "(" ~ comma_separated_values? ~ ")" }

map = { "{" ~ map_inner? ~ "}" }
map_inner = { map_entry ~ ("," ~ map_entry)* ~ ","? }
map_entry = { value ~ ":" ~ value }

// types
named_inner = { named_field ~ ("," ~ named_field)* ~ ","? }
named_field = { ident ~ ":" ~ value }
ident = @{ (ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")*) | ("_" ~ (ASCII_ALPHANUMERIC | "_")+) }

user_type = { user_type_named | user_type_tuple | user_type_unit }
user_type_named = { ident? ~ "(" ~ named_inner? ~ ")" }
user_type_tuple = { ident ~ tuple }
user_type_unit = { ident }

value = { signed_int | float | bool | char | string | list | map | user_type | tuple }

extension = { "#" ~ "!" ~ "[" ~ extensions_inner ~ "]" }
extensions_inner = { "enable" ~ "(" ~ ident ~ ("," ~ ident)* ~ ","? ~ ")" }

ron_file = { SOI ~ extension* ~ value ~ EOI }
