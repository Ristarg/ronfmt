// implicit
WHITESPACE = _{ " " | "\n" | "\t" | "\r" }
COMMENT = ${ line_comment | block_comment }
line_comment = { "//" ~ line_comment_inner ~ (NEWLINE | &EOI) }
line_comment_inner = { (!NEWLINE ~ ANY)* }
block_comment = { "/*" ~ (block_comment | block_comment_inner)  ~ "*/" }
block_comment_inner = { (!"*/" ~ ANY)* }

// booleans
bool = { "true" | "false" }

// numbers
sign = { "+" | "-" }

signed_int = @{ sign? ~ unsigned_int }
unsigned_int = { with_base | ASCII_DIGIT+ }
with_base = { "0" ~ ("x" | "b" | "o") ~ ASCII_HEX_DIGIT+ }

float = @{ float_std | float_frac }
float_std = { sign? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT* ~ float_exp? }
float_frac = { "." ~ ASCII_DIGIT+ ~ float_exp? }
float_exp = { ("e" | "E") ~ ASCII_DIGIT+ }

// chars
char = ${ "'" ~ char_inner ~ "'" }
char_inner = { "\\'" | (!"'" ~ ANY)* }

// strings
string = ${ string_std | string_raw }
string_std = { "\"" ~ string_std_inner ~ "\"" }
string_std_inner = { ("\\\"" | !"\"" ~ ANY)* }
string_raw = {
    "r" ~ PUSH("#"*) ~ "\"" ~
    string_raw_inner ~
    "\"" ~ POP
}
string_raw_inner = { (!("\"" ~ PEEK) ~ ANY)* }

// collections
comma_separated_values = { value ~ ("," ~ value)* ~ ","? }
list = { "[" ~ comma_separated_values? ~ "]" }
tuple = { "(" ~ comma_separated_values? ~ ")" }

map = { "{" ~ map_inner? ~ "}" }
map_inner = { map_entry ~ ("," ~ map_entry)* ~ ","? }
map_entry = { value ~ ":" ~ value }

// types
named_inner = { named_field ~ ("," ~ named_field)* ~ ","? }
named_field = { ident ~ ":" ~ value }
ident = @{ (ASCII_ALPHA | "_") ~ (ASCII_ALPHANUMERIC | "_")* }

user_type = { user_type_named | user_type_tuple | user_type_unit }
user_type_named = { ident? ~ "(" ~ named_inner? ~ ")" }
user_type_tuple = { ident ~ tuple }
user_type_unit = { ident }

value = { float | signed_int | bool | char | string | list | map | user_type | tuple }

extension = {
    "#" ~ "!" ~ "[" ~ "enable" ~ "(" ~
    ident ~ ("," ~ ident)* ~ ","? ~
    ")" ~ "]"
}

ron_file = { SOI ~ extension* ~ value ~ EOI }
